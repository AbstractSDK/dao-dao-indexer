{
  "openapi": "3.1.0",
  "info": {
    "version": "0.0.1",
    "description": "The DAO DAO API is the primary interface for our custom-built state indexer. It replaces smart contract queries by making blockchain state readily available, and enhances [daodao.zone](https://daodao.zone) with features like real-time page updates, notifications, and search capabilities. This service both reduces our dependence on blockchain nodes and enables the creation of meta-queries that aggregate information across multiple contracts.",
    "title": "DAO DAO API",
    "license": {
      "name": "GNU Affero General Public License v3.0 only",
      "identifier": "AGPL-3.0-only",
      "url": "https://spdx.org/licenses/AGPL-3.0-only.html"
    }
  },
  "host": "indexer.daodao.zone",
  "tags": [
    {
      "name": "contract",
      "description": "Endpoints where a smart contract is the subject"
    },
    {
      "name": "account",
      "description": "Endpoints where any account (wallet, contract, etc.) is the subject"
    },
    {
      "name": "generic",
      "description": "Endpoints that do not have a subject"
    }
  ],
  "paths": {
    "/contract/{address}/cw1Whitelist/adminList": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the list of addresses",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw20/allAccounts": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all accounts that hold this token",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of accounts to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "address to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20/allowance": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the allowance for a spender from an owner",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "address of the token owner",
            "required": true,
            "in": "query"
          },
          {
            "name": "spender",
            "description": "address of the spender",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20/balance": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the balance of a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to check the balance for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20/daos": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAOs that use this token as their governance token",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw20/logoUrl": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the logo URL",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw20/marketingInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the marketing info",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw20/minter": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the minter info",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw20/ownerAllowances": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all allowances granted by an owner",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "address of the token owner",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of allowances to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "address to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20/spenderAllowances": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all allowances granted to a spender",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "spender",
            "description": "address of the spender",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of allowances to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "address to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20/tokenInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the token info",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw20/topAccountBalances": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the top account balances",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of account balances to return",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/claims": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the claims for an address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to retrieve claims for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration of the staking contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/getHooks": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the hooks associated with the staking contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/listStakers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "lists stakers and their balances",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of stakers to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "address to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/stakedBalance": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the staked balance string of an address at a specific block height, defaulting to the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to check the staked balance for",
            "required": true,
            "in": "query"
          },
          {
            "name": "block",
            "description": "block height to get the staked balance at",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/stakedBalanceAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the staked balance object of an address at a specific block height, defaulting to the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to check the staked balance for",
            "required": true,
            "in": "query"
          },
          {
            "name": "block",
            "description": "block height to get the staked balance at",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/stakedValue": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "calculates the value of staked tokens for an address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to calculate the staked value for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/topStakers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the top stakers by balance",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of top stakers to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "oraichainStakingToken",
            "description": "token address for oraichain-cw20-staking contract",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/totalStaked": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total staked amount at a specific block height, defaulting to the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "block",
            "description": "block height to get the total staked amount at",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/totalStakedAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total staked amount at a specific block height, defaulting to the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "block",
            "description": "block height to get the total staked amount at",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw20Stake/totalValue": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total value of the staking contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw4Group/admin": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the admin address of the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw4Group/hooks": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the hooks associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw4Group/listMembers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "lists members of the group",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of members to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "address to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw4Group/member": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the weight of a member in the group",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address of the member to query",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw4Group/totalWeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total weight of all members in the group",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw721/allNftInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves both NFT info and owner info for a specific token ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "description": "ID of the token to retrieve all info for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw721/allOperators": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all operators for a specific owner",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "address of the owner to retrieve operators for",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of operators to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "operator address to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw721/allTokens": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all tokens in the NFT contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of tokens to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "token ID to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw721/approvals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all approvals for a specific token",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "description": "ID of the token to retrieve approvals for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw721/approvalsForSpender": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves approvals for a specific spender on a token",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "description": "ID of the token to check approvals for",
            "required": true,
            "in": "query"
          },
          {
            "name": "spender",
            "description": "address of the spender to check approvals for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw721/contractInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the contract info for the NFT contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw721/minter": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the minter address for the NFT contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw721/nftInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the NFT info for a specific token ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "description": "ID of the token to retrieve info for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw721/numTokens": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total number of tokens in the NFT contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cw721/ownerOf": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the owner and approvals for a specific token ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "description": "ID of the token to retrieve owner info for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cw721/tokens": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all tokens owned by a specific address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "owner",
            "description": "address of the owner to retrieve tokens for",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of tokens to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "token ID to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cwPayrollFactory/codeId": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the code ID of the cw-vesting contract that gets created by this factory",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cwPayrollFactory/listVestingContracts": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "lists vesting contracts",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of contracts to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "contract address to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cwPayrollFactory/listVestingContractsByInstantiator": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "lists vesting contracts by instantiator",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "instantiator",
            "description": "address of the instantiator",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of contracts to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "contract address to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cwPayrollFactory/listVestingContractsByInstantiatorReverse": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "lists vesting contracts by instantiator in reverse order",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "instantiator",
            "description": "address of the instantiator",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of contracts to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startBefore",
            "description": "contract address to start listing before",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cwPayrollFactory/listVestingContractsByRecipient": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "lists vesting contracts by recipient",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipient",
            "description": "address of the recipient",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of contracts to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "contract address to start listing after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cwPayrollFactory/listVestingContractsByRecipientReverse": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "lists vesting contracts by recipient in reverse order",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "recipient",
            "description": "address of the recipient",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of contracts to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startBefore",
            "description": "contract address to start listing before",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cwPayrollFactory/listVestingContractsReverse": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "lists vesting contracts in reverse order",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of contracts to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startBefore",
            "description": "contract address to start listing before",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/cwPayrollFactory/ownership": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the ownership information of the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cwTokenSwap/status": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the status of the token swap",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cwVesting/info": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves vesting information",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cwVesting/ownership": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the contract ownership defined by the cw-ownable crate",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cwVesting/totalToVest": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "calculates the total amount to be vested",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cwVesting/unbondingDurationSeconds": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "calculates the unbonding duration in seconds",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cwVesting/validatorStakes": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the amount staked and unstaking for each validator over time",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cwVesting/vestDuration": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "calculates the duration of the vesting period",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/cwVesting/vested": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "calculates the vested amount at a given timestamp",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "t",
            "description": "nanosecond timestamp to calculate vested amount at, defaulting to the current block",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoCore/activeProposalModules": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all active (enabled) proposal modules for the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/admin": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the admin address of the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/adminNomination": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the nominated admin address of the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/approvalDaos": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves DAOs that have a pre-propose-approval contract whose approver is set to this DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO configuration",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/cw20Balances": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the CW20 token balances for the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/cw20List": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the list of CW20 token addresses associated with the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/cw721List": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the list of CW721 NFT addresses associated with the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/daoUri": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the URI of the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/item": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a specific item from the DAO's storage",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "description": "key of the item to retrieve",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoCore/listItems": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all items stored in the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/listSubDaos": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the list of subDAOs recognized by the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/pauseInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the pause status of the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/paused": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the pause status of the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/polytoneProxies": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves polytone proxies for the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/potentialSubDaos": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves potential subDAOs, which are DAOs whose admin state key is set to this DAO. these may or may not be recognized by the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/proposalModules": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all proposal modules for the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/totalPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/totalPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "block",
            "description": "block height to check voting power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoCore/votingModule": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting module address of the DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/votingPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for a given address at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to check voting power for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoCore/votingPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power at a specific block height for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to check voting power for",
            "required": true,
            "in": "query"
          },
          {
            "name": "block",
            "description": "block height to check voting power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoCore/dumpState": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a lot of high-level information about a DAO, including its voting and proposal modules",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/junoHomeMetadata": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves specific DAO metadata for the Juno website",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/allMembers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all members of the DAO and optionally its SubDAOs",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "recursive",
            "description": "whether or not to recurse into SubDAOs. defaults to true",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoCore/lastMembershipChange": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the date membership was last updated for a member-based DAO",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/listMembers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "lists all members of the DAO with their voting power percentages",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/memberCount": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "count of unique members in the DAO and optionally its SubDAOs",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "recursive",
            "description": "whether or not to recurse into SubDAOs. defaults to true",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoCore/allProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all proposals, optionally including SubDAOs",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "filter to apply to the proposal list",
            "required": false,
            "in": "query"
          },
          {
            "name": "recursive",
            "description": "whether to recurse into SubDAOs (defaults to true)",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoCore/lastActivity": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the date of the most recent proposal event (completion or creation)",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoCore/openProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves open proposals and optionally voting status for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "optional address to check voting status for",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoCore/proposalCount": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total number of proposals across all active proposal modules",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/approver": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the approver address for the pre-propose module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/completedProposalIdForCreatedProposalId": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the completed proposal ID for a given created proposal ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the created proposal",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/completedProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of completed proposals",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "ID to start after when paginating",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration for the pre-propose module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/depositInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves deposit information for a given proposal ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalId",
            "description": "ID of the proposal to retrieve deposit information for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/pendingProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of pending proposals",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "ID to start after when paginating",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/proposal": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/proposalCompletedAt": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the completion date of a proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/proposalCreatedAt": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the creation date of a proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/proposalModule": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the proposal module address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/reverseCompletedProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of completed proposals in reverse order",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startBefore",
            "description": "ID to start before when paginating",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprovalSingle/reversePendingProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of pending proposals in reverse order",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startBefore",
            "description": "ID to start before when paginating",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprover/approverProposalIdForPreProposeApprovalId": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the approver proposal ID for a given approval ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "approval proposal ID",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprover/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration for the pre-propose module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprover/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprover/depositInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves deposit information for a given proposal ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalId",
            "description": "ID of the proposal to retrieve deposit information for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprover/preProposeApprovalContract": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the pre-propose approval contract address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprover/preProposeApprovalIdForApproverProposalId": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the approval ID for a given approver proposal ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "approver proposal ID",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeApprover/proposalModule": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the proposal module address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeMultiple/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration for the pre-propose module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeMultiple/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeMultiple/depositInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves deposit information for a given proposal ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalId",
            "description": "ID of the proposal to retrieve deposit information for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeMultiple/proposalModule": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the proposal module address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeSingle/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration for the pre-propose module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeSingle/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeSingle/depositInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves deposit information for a given proposal ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalId",
            "description": "ID of the proposal to retrieve deposit information for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoPreProposeSingle/proposalModule": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the proposal module address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration of the proposal module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/creationPolicy": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the proposal creation policy",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address associated with the proposal module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/listProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of proposals",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "proposal ID to start after",
            "required": false,
            "in": "query"
          },
          {
            "name": "filter",
            "description": "set to `passed` to filter by proposals that were passed, including those that were executed",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/listVotes": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of votes for a given proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalId",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of votes to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "voter address to start after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/nextProposalId": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the next proposal ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/openProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of open proposals",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "optional address to check if they have voted",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/proposal": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "proposal ID to retrieve",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/proposalCount": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the number of proposals",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/proposalCreatedAt": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the creation date of a proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/reverseProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of proposals in reverse order",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startBefore",
            "description": "proposal ID to start before",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalMultiple/vote": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the vote for a given proposal and voter",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalId",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          },
          {
            "name": "voter",
            "description": "address of the voter",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration of the proposal module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/creationPolicy": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the proposal creation policy",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address associated with the proposal module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/listProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of proposals",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "proposal ID to start after",
            "required": false,
            "in": "query"
          },
          {
            "name": "filter",
            "description": "set to `passed` to filter by proposals that were passed, including those that were executed",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/listVotes": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of votes for a given proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalId",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of votes to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "voter address to start after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/nextProposalId": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the next proposal ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/openProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of open proposals",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "optional address to check if they have voted",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/proposal": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "proposal ID to retrieve",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/proposalCount": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the number of proposals",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/proposalCreatedAt": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the creation date of a proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/reverseProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of proposals in reverse order",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startBefore",
            "description": "proposal ID to start before",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoProposalSingle/vote": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the vote for a given proposal and voter",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalId",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          },
          {
            "name": "voter",
            "description": "address of the voter",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoRewardsDistributor/distribution": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a distribution",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the distribution to retrieve",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoRewardsDistributor/distributions": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of distributions",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of distributions to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "ID to start listing distributions after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVoting/activeThreshold": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the active threshold for the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw20Staked/activeThreshold": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the active threshold for the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw20Staked/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw20Staked/stakingContract": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the staking contract address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw20Staked/tokenContract": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the token contract address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw20Staked/topStakers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the top stakers sorted by voting power",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw20Staked/totalPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw20Staked/totalPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "block",
            "description": "block height to get total power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw20Staked/votingPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw20Staked/votingPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          },
          {
            "name": "block",
            "description": "block height to get voting power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw4/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw4/groupContract": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the group contract address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw4/totalPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw4/totalPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "block",
            "description": "block height to get total power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw4/votingPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw4/votingPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          },
          {
            "name": "block",
            "description": "block height to get voting power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/activeThreshold": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the active threshold for the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration of the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/hooks": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the hooks associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/nftClaims": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the NFT claims for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get NFT claims for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/ownersOfStakedNfts": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a mapping of NFT token IDs to their stakers",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/stakedNfts": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the staked NFTs for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get staked NFTs for",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of NFTs to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "token ID to start after in the list",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/staker": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the staker address for a given token ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "description": "token ID to get staker for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/topStakers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the top stakers sorted by voting power",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of stakers to return",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/totalPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/totalPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "block",
            "description": "block height to get total power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/votingPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingCw721Staked/votingPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          },
          {
            "name": "block",
            "description": "block height to get voting power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/activeThreshold": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the active threshold for the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/claims": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the claims for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get claims for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration for the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/getHooks": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the hooks for the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/listStakers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of stakers with their balances",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of stakers to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "address to start listing after in ascending order",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/topStakers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the top stakers sorted by voting power",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/totalPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/totalPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "block",
            "description": "block height to get total power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/votingPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingNativeStaked/votingPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          },
          {
            "name": "block",
            "description": "block height to get voting power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/activeThreshold": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the active threshold for the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration of the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/hooks": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the hooks associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/nftClaims": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the NFT claims for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get NFT claims for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/ownersOfStakedNfts": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a mapping of NFT token IDs to their stakers",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/stakedNfts": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the staked NFTs for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get staked NFTs for",
            "required": true,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of NFTs to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "token ID to start after in the list",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/staker": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the staker address for a given token ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "tokenId",
            "description": "token ID to get staker for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/topStakers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the top stakers sorted by voting power",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of stakers to return",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/totalPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/totalPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "block",
            "description": "block height to get total power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/votingPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingOnftStaked/votingPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          },
          {
            "name": "block",
            "description": "block height to get voting power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingSgCommunityNft/allVotersWithVotingPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all voters with their voting power",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of voters to return",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingSgCommunityNft/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingSgCommunityNft/hooks": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the hooks associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingSgCommunityNft/listVoters": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of voters",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of voters to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "address to start after in the list",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingSgCommunityNft/nftContract": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the NFT contract address associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingSgCommunityNft/registeredNft": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the registered NFT token ID for an address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get registered NFT for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingSgCommunityNft/totalPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingSgCommunityNft/totalPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "block",
            "description": "block height to get total power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingSgCommunityNft/votingPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingSgCommunityNft/votingPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          },
          {
            "name": "block",
            "description": "block height to get voting power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/activeThreshold": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the active threshold for the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/claims": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the claims for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get claims for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration of the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/denom": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the token denomination used by the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/getHooks": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the hooks associated with the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/listStakers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of stakers",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of stakers to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "address to start after in the list",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/tokenIssuerContract": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the token issuer contract address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/topStakers": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the top stakers sorted by voting power",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/totalPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/totalPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the total voting power at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "block",
            "description": "block height to get total power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/votingPower": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at the current block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/daoVotingTokenStaked/votingPowerAtHeight": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the voting power for an address at a specific block height",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get voting power for",
            "required": true,
            "in": "query"
          },
          {
            "name": "block",
            "description": "block height to get voting power at",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/info": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the contract info (name and version)",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/instantiatedAt": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the contract instantiation timestamp",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/item": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a value stored in the contract state at the given key",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "description": "`Item` key to retrieve",
            "required": false,
            "in": "query"
          },
          {
            "name": "keys",
            "description": "`Map` key to retrieve (by joining JSON-stringified keys with a colon)",
            "required": false,
            "examples": {
              "simple": {
                "summary": "access a string-keyed map",
                "value": "\"map_namespace\":\"key_in_map\""
              },
              "numeric": {
                "summary": "access a numeric-keyed map",
                "value": "\"map_namespace\":1"
              },
              "tuple": {
                "summary": "access a map with a tuple key",
                "value": "\"map_namespace\":\"address\":1:\"another_key\""
              }
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/map": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a map stored in the contract state at the given key. if the map has a tuple key, you can access the map at any degree by omitting a suffix of the tuple key",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "description": "`Map` namespace to retrieve",
            "required": false,
            "in": "query"
          },
          {
            "name": "keys",
            "description": "`Map` namespace to retrieve (by joining JSON-stringified keys with a colon)",
            "required": false,
            "examples": {
              "simple": {
                "summary": "access a normal map",
                "value": "\"map_namespace\""
              },
              "tuple": {
                "summary": "access a map with a tuple namespace",
                "value": "\"map_namespace\":\"address\":1"
              }
            },
            "in": "query"
          },
          {
            "name": "numeric",
            "description": "whether or not the map's keys are numbers (otherwise treated as strings)",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdPreProposeSingleOverrule/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration for the pre-propose module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdPreProposeSingleOverrule/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdPreProposeSingleOverrule/depositInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves deposit information for a given proposal ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalId",
            "description": "ID of the proposal to retrieve deposit information for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdPreProposeSingleOverrule/overruleProposalId": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the overrule proposal ID for a given subDAO proposal ID and timelock address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "timelockAddress",
            "description": "the address of the timelock contract",
            "required": true,
            "in": "query"
          },
          {
            "name": "subdaoProposalId",
            "description": "the ID of the subDAO proposal",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdPreProposeSingleOverrule/proposalModule": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the proposal module address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdSubdaoPreProposeSingle/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration for the pre-propose module",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdSubdaoPreProposeSingle/dao": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the DAO address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdSubdaoPreProposeSingle/depositInfo": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves deposit information for a given proposal ID",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "proposalId",
            "description": "ID of the proposal to retrieve deposit information for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdSubdaoPreProposeSingle/proposalModule": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the proposal module address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdSubdaoPreProposeSingle/timelockAddress": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the timelock contract address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdSubdaoTimelockSingle/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the configuration of the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdSubdaoTimelockSingle/listProposals": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a list of proposals",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          },
          {
            "name": "startAfter",
            "description": "ID to start listing proposals after",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdSubdaoTimelockSingle/proposal": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves a proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the proposal to retrieve",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/neutron/cwdSubdaoTimelockSingle/proposalExecutionError": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the execution error for a specific proposal",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "description": "ID of the proposal to retrieve the execution error for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/ownership": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the contract ownership defined by the cw-ownable crate",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/polytone/note/remoteAddress": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the remote address for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get the remote address for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/polytone/listener/note": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the note contract address this listener is listening to",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/polytone/listener/result": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the result for a given initiator and initiator message",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "initiator",
            "description": "address of the initiator",
            "required": true,
            "in": "query"
          },
          {
            "name": "initiatorMsg",
            "description": "message (identifier) that was passed during execution",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/polytone/proxy/instantiator": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the instantiator/owner of the proxy contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/polytone/voice/remoteController": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the remote controller for a given address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "address to get the remote controller for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/polytone/voice/senderInfoForProxy": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves sender information for a proxy address",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "address",
            "description": "proxy address to get sender information for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/valence/account/admin": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the admin address of the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/valence/account/data": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves account data (admin and rebalancer config)",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/valence/account/fundsInAuction": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves information about funds currently in auction for the account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/valence/account/rebalancerConfig": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the rebalancer configuration for the account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/valence/account/rebalancerTargets": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the rebalancer targets",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/valence/auction/config": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the auction configuration and price strategy from the contract",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/valence/oracle/allPrices": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all price pairs from the oracle",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/valence/oracle/price": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves the price for a specific pair from the oracle",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "pair",
            "description": "comma-separated pair of token denominations to get the price for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/valence/oracle/pricesOfDenom": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves all prices for a specific base token",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          },
          {
            "name": "base_denom",
            "description": "base token denomination to get prices for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/contract/{address}/wasmswap/price": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "calculates the price ratio between the two tokens in the pool",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/contract/{address}/wasmswap/summary": {
      "get": {
        "tags": [
          "contract"
        ],
        "description": "retrieves summary information about the pool",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "contract address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/bank/balance": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves the balance of a specific token for this account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          },
          {
            "name": "denom",
            "description": "denomination of the token to retrieve the balance for",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/account/{address}/bank/balances": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves all token balances for this account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/contract/ownedBy": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves contracts (that use cw-ownable to manage ownership) where the account is the owner",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          },
          {
            "name": "key",
            "description": "optional code ID key to filter by",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/account/{address}/daos/adminOf": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves DAOs where the account is the admin",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/daos/memberOf": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves DAOs where the account is a member",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/nft/collections": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves NFT collections with their NFTs owned by the account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/nft/stakedWithDaos": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves NFT collections with their NFTs staked by the account with DAOs",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/polytone/proxies": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves mapping of polytone note contract to the remote address controlled by this account on the chain the note is connected to",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/proposals/created": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves proposals created by the account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/proposals/stats": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves statistics about proposals created and votes cast by the account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/proposals/votesCast": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves votes cast by the account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/tokens/list": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves a list of CW20 token balances for the account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/valence/accounts": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves valence accounts owned by this account",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/vesting/ownerOf": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves the addresses of cw-vesting contracts owned by the account or by cw1-whitelist contracts where the account is an admin",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/account/{address}/veto/vetoableProposals": {
      "get": {
        "tags": [
          "account"
        ],
        "description": "retrieves all proposals this account has the authority to veto",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "description": "account address",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/generic/_/communityPool/balances": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves the current balances of the community pool",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/generic/_/featuredDaos": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves a list of featured DAOs for the current chain, with the order number from the entire featured list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      }
    },
    "/generic/_/gov/decodedProposal": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves and decodes a chain governance proposal",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the proposal to retrieve and decode",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/gov/decodedVote": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves and decodes a vote for a specific chain governance proposal and voter",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          },
          {
            "name": "voter",
            "description": "address of the voter",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/gov/proposal": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves a chain governance proposal",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the proposal to retrieve",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/gov/proposals": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves a list of chain governance proposals in ascending order",
        "parameters": [
          {
            "name": "offset",
            "description": "number of proposals to skip",
            "required": false,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/gov/reverseProposals": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves a list of chain governance proposals in descending order",
        "parameters": [
          {
            "name": "offset",
            "description": "number of proposals to skip",
            "required": false,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of proposals to return",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/gov/reverseVotes": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves a list of votes for a specific chain governance proposal in descending order",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          },
          {
            "name": "offset",
            "description": "number of votes to skip",
            "required": false,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of votes to return",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/gov/vote": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves a vote for a specific chain governance proposal and voter",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          },
          {
            "name": "voter",
            "description": "address of the voter",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/gov/votes": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves a list of votes for a specific chain governance proposal in ascending order",
        "parameters": [
          {
            "name": "id",
            "description": "ID of the proposal",
            "required": true,
            "in": "query"
          },
          {
            "name": "offset",
            "description": "number of votes to skip",
            "required": false,
            "in": "query"
          },
          {
            "name": "limit",
            "description": "maximum number of votes to return",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/stats/daos": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "counts the number of DAOs created",
        "parameters": [
          {
            "name": "daysAgo",
            "description": "optionally only return results for the last N days",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/stats/proposals": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "counts the number of proposals created",
        "parameters": [
          {
            "name": "daysAgo",
            "description": "optionally only return results for the last N days",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/stats/uniqueVoters": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "counts the number of unique voters",
        "parameters": [
          {
            "name": "daysAgo",
            "description": "optionally only return results for the last N days",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/stats/votes": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "counts the number of votes cast",
        "parameters": [
          {
            "name": "daysAgo",
            "description": "optionally only return results for the last N days",
            "required": false,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    },
    "/generic/_/token/daos": {
      "get": {
        "tags": [
          "generic"
        ],
        "description": "retrieves DAOs that use a native token as their governance token",
        "parameters": [
          {
            "name": "denom",
            "description": "native token denomination",
            "required": true,
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "missing required arguments"
          }
        }
      }
    }
  }
}